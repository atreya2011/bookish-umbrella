- name: Get DEB architecture
  shell: dpkg --print-architecture
  register: deb_architecture

- name: uname -s
  shell: uname -s
  register: unames

- name: Get the username running the playbook
  become: false
  shell: whoami
  register: username_on_host

- name: Docker - install apt package dependencies
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
    state: latest
    update_cache: yes
  # https://github.com/ansible/ansible/issues/51663#issuecomment-650562476
  # There has been an intermittent issue with this task where it would fail and print the error:
  # 
  #     Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process
  #     using it?
  #
  # The reason for this is unclear. It's not from unattended-upgrades as that has already been
  # uninstalled when creating the base image. The workaround for now is to simply retry this task
  # several times in the event that it fails, with a small delay between each attempt.
  register: result
  until: result is not failed
  retries: 5
  delay: 5

# https://stackoverflow.com/questions/71585303/how-can-i-manage-keyring-files-in-trusted-gpg-d-with-ansible-playbook-since-apt/72548342#72548342
- name: Docker - Add Docker's official GPG Key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
    force: true

- name: Docker - Setup Stable Repository
  apt_repository:
    repo: "deb [arch={{ deb_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
  register: result
  until: result is not failed
  retries: 5
  delay: 5

- name: Docker - install Docker
  apt:
    name: 
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: latest
    update_cache: yes
  # https://github.com/ansible/ansible/issues/51663#issuecomment-650562476
  # There has been an intermittent issue with this task where it would fail and print the error:
  # 
  #     Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process
  #     using it?
  #
  # The reason for this is unclear. It's not from unattended-upgrades as that has already been
  # uninstalled when creating the base image. The workaround for now is to simply retry this task
  # several times in the event that it fails, with a small delay between each attempt.
  register: result
  until: result is not failed
  retries: 5
  delay: 5

- name: Docker - Create the docker group
  group:
    name: docker
    state: present

- name: Docker - Add users to the group
  user:
    name: "{{ username_on_host.stdout }}"
    groups: ["docker"]
    append: yes

- name: Activate changes to docker group
  become: false
  command: newgrp docker

- name: Set Docker Compose variables
  set_fact:
    docker_compose_path: /usr/local/bin/docker-compose

- name: Docker - Delete existing Docker Compose Alias Script.
  file:
    path: "{{ docker_compose_path }}"
    state: absent

- name: Docker - Create Docker Compose Alias Script.
  copy:
    dest: "{{ docker_compose_path }}"
    content: 
      docker compose --compatibility "$@"
    mode: 0755
